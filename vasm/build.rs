use cc;

fn main() {
    cc::Build::new()
        .file("vasm_c/atom.c")
        .file("vasm_c/cond.c")
        .file("vasm_c/error.c")
        .file("vasm_c/expr.c")
        .file("vasm_c/hugeint.c")
        .file("vasm_c/output_aout.c")
        .file("vasm_c/output_bin.c")
        .file("vasm_c/output_elf.c")
        .file("vasm_c/output_hunk.c")
        .file("vasm_c/output_srec.c")
        .file("vasm_c/output_test.c")
        .file("vasm_c/output_tos.c")
        .file("vasm_c/output_vobj.c")
        .file("vasm_c/parse.c")
        .file("vasm_c/reloc.c")
        .file("vasm_c/supp.c")
        .file("vasm_c/symbol.c")
        .file("vasm_c/symtab.c")
        .file("vasm_c/vasm.c")
        .file("vasm_c/cpus/m68k/cpu.c")
        .file("vasm_c/syntax/mot/syntax.c")
        .warnings(false)
        .define("OUTAOUT", None)
        .define("OUTBIN", None)
        .define("OUTELF", None)
        .define("OUTHUNK", None)
        .define("OUTSREC", None)
        .define("OUTTOS", None)
        .define("OUTVOBJ", None)
        .include("vasm_c")
        .include("vasm_c/cpus/m68k")
        .include("vasm_c/syntax/mot")
        .compile("vasm_tool");
}

